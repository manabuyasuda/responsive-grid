// -----------------------------------------------------------------
// Variable and Rule set base
// -----------------------------------------------------------------

$base-font-size: 16px !default;
html { font-size: $base-font-size; }

$border-box: true !default;
@if $border-box == true {
    * {
        box-sizing: border-box;
        &:before,
        &:after {
            box-sizing: border-box;
        }
    }
}


// -----------------------------------------------------------------
// Map breakpoint
// -----------------------------------------------------------------

$breakpoints: (
    'palm': (min-width: 400px),
    'tab': (min-width: 768px),
    'lap': (min-width: 1000px),
    'desk': (min-width: 1200px),
    'below-palm': (max-width: 399px),
    'below-tab': (max-width: 767px),
    'below-lap': (max-width: 999px),
    'below-desk': (max-width: 1199px)
) !default;


// ==========================================================================
// Mixin media query
// ==========================================================================

@mixin media-query($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media only screen and #{inspect(map-get($breakpoints, $breakpoint))} {
            @content;
        }
    }
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}


// -----------------------------------------------------------------
// Variable grid
// -----------------------------------------------------------------

$grid-max-width: 1200px !default;
$grid-column: 12 !default;
$grid-gutter: 14px !default;


// ==========================================================================
// Mixin grid system
// ==========================================================================

// e.g. two column layout(`aside` is arranged on the left)
//
// .l-container {
//     @include grid-container;
// }
// .l-row {
//     @include grid-row;
//     @include grid-gutter(row);
// }
// article {
//     @include grid-base;
//     @include grid-gutter(column);
//     @include media-query(tab) {
//         @include grid-column(8);
//         @include grid-shift(push, 4);
//     }
// }
// aside {
//     @include grid-base;
//     @include grid-gutter(column);
//     @include media-query(tab) {
//         @include grid-column(4);
//         @include grid-shift(pull, 8);
//     }
// }
//
// e.g. Side-by-side list(such as Block-Grid of Foundation)
// .block-grid {
//     @include grid-row;
//     @include grid-gutter(row, 2%);
//     > li {
//         @include grid-base(6);
//         @include grid-gutter(over-all, 2%);
//         @include media-query(tab) {
//             @include grid-column(4);
//         }
//     }
// }
//

@mixin grid-container($max-width: $grid-max-width) {
    width: 100%;
    max-width: $max-width;
    margin-right: auto;
    margin-left: auto;
}

@mixin grid-row() {
    display: block;
    margin: 0;
    padding: 0;
    font-size: 0 !important;
}

@mixin grid-gutter($type, $value: $grid-gutter) {
    @if $type == row {
        margin-right: - $value;
        margin-left: - $value;
    }
    @if $type == column {
        padding-right: $value;
        padding-left: $value;
    }
    @if $type == over-all {
        padding: $value;
    }
}

@mixin grid-base($column: $grid-column, $columns: $grid-column, $vertical-align: top) {
    display: inline-block;
    @if $border-box == false {
        box-sizing: border-box;
    }
    width: percentage($column / $columns);
    font-size: 1rem;
    vertical-align: $vertical-align;
}

@mixin grid-column($column: $grid-column, $columns: $grid-column, $vertical-align: null) {
    width: percentage($column / $columns);
    vertical-align: $vertical-align;
}

@mixin grid-shift($type, $column, $columns: $grid-column) {
    @if $type == push {
        position: relative;
        left: percentage($column / $columns);
    }
    @else if $type == pull {
        position: relative;
        right: percentage($column / $columns);
    }
}